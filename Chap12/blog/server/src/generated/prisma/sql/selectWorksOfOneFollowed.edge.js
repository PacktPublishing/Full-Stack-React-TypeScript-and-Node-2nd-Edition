
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */
"use strict"
const { makeTypedQueryFactory: $mkFactory } = require("../runtime/edge.js")
exports.selectWorksOfOneFollowed = /*#__PURE__*/ $mkFactory("\nSELECT\nw.id,\nw.\"updatedAt\",\nw.title,\nw.description,\nw.content,\nw.\"authorId\",\np.\"userName\",\np.\"fullName\",\np.description AS \"authorDesc\",\nCOALESCE(\njson_agg(\nDISTINCT jsonb_build_object(\n'topic', jsonb_build_object(\n'id', t.id,\n'name', t.name\n)\n)\n) FILTER (WHERE t.id IS NOT NULL),\n'[]'::json\n) AS \"workTopics\",\nCOALESCE(\njson_agg(\nDISTINCT jsonb_build_object(\n'id', wl.id\n)\n) FILTER (WHERE wl.id IS NOT NULL),\n'[]'::json\n) AS \"workLikes\"\nFROM \"Work\" w\nINNER JOIN \"Profile\" p ON w.\"authorId\" = p.id\nLEFT JOIN \"WorkTopic\" wt ON w.id = wt.\"workId\"\nLEFT JOIN \"Topic\" t ON wt.\"topicId\" = t.id\nLEFT JOIN \"WorkLike\" wl ON w.id = wl.\"workId\"\nWHERE w.\"authorId\" = $1\nAND ($3 = -1 OR w.id < $3)\nGROUP BY w.id, w.\"updatedAt\", w.title, w.description, w.content, w.\"authorId\", p.\"userName\", p.\"fullName\", p.description\nORDER BY w.id DESC\nLIMIT $2;")
