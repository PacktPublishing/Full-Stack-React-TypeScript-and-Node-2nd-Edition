
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Profile` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Profile
 * 
 */
export type ProfileModel = runtime.Types.Result.DefaultSelection<Prisma.$ProfilePayload>

export type AggregateProfile = {
  _count: ProfileCountAggregateOutputType | null
  _avg: ProfileAvgAggregateOutputType | null
  _sum: ProfileSumAggregateOutputType | null
  _min: ProfileMinAggregateOutputType | null
  _max: ProfileMaxAggregateOutputType | null
}

export type ProfileAvgAggregateOutputType = {
  id: number | null
  avatarId: number | null
}

export type ProfileSumAggregateOutputType = {
  id: bigint | null
  avatarId: bigint | null
}

export type ProfileMinAggregateOutputType = {
  id: bigint | null
  createdAt: Date | null
  updatedAt: Date | null
  userName: string | null
  password: string | null
  fullName: string | null
  description: string | null
  socialLinkPrimary: string | null
  socialLinkSecondary: string | null
  avatarId: bigint | null
}

export type ProfileMaxAggregateOutputType = {
  id: bigint | null
  createdAt: Date | null
  updatedAt: Date | null
  userName: string | null
  password: string | null
  fullName: string | null
  description: string | null
  socialLinkPrimary: string | null
  socialLinkSecondary: string | null
  avatarId: bigint | null
}

export type ProfileCountAggregateOutputType = {
  id: number
  createdAt: number
  updatedAt: number
  userName: number
  password: number
  fullName: number
  description: number
  socialLinkPrimary: number
  socialLinkSecondary: number
  avatarId: number
  _all: number
}


export type ProfileAvgAggregateInputType = {
  id?: true
  avatarId?: true
}

export type ProfileSumAggregateInputType = {
  id?: true
  avatarId?: true
}

export type ProfileMinAggregateInputType = {
  id?: true
  createdAt?: true
  updatedAt?: true
  userName?: true
  password?: true
  fullName?: true
  description?: true
  socialLinkPrimary?: true
  socialLinkSecondary?: true
  avatarId?: true
}

export type ProfileMaxAggregateInputType = {
  id?: true
  createdAt?: true
  updatedAt?: true
  userName?: true
  password?: true
  fullName?: true
  description?: true
  socialLinkPrimary?: true
  socialLinkSecondary?: true
  avatarId?: true
}

export type ProfileCountAggregateInputType = {
  id?: true
  createdAt?: true
  updatedAt?: true
  userName?: true
  password?: true
  fullName?: true
  description?: true
  socialLinkPrimary?: true
  socialLinkSecondary?: true
  avatarId?: true
  _all?: true
}

export type ProfileAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Profile to aggregate.
   */
  where?: Prisma.ProfileWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Profiles to fetch.
   */
  orderBy?: Prisma.ProfileOrderByWithRelationInput | Prisma.ProfileOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ProfileWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Profiles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Profiles.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Profiles
  **/
  _count?: true | ProfileCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ProfileAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ProfileSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ProfileMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ProfileMaxAggregateInputType
}

export type GetProfileAggregateType<T extends ProfileAggregateArgs> = {
      [P in keyof T & keyof AggregateProfile]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateProfile[P]>
    : Prisma.GetScalarType<T[P], AggregateProfile[P]>
}




export type ProfileGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProfileWhereInput
  orderBy?: Prisma.ProfileOrderByWithAggregationInput | Prisma.ProfileOrderByWithAggregationInput[]
  by: Prisma.ProfileScalarFieldEnum[] | Prisma.ProfileScalarFieldEnum
  having?: Prisma.ProfileScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ProfileCountAggregateInputType | true
  _avg?: ProfileAvgAggregateInputType
  _sum?: ProfileSumAggregateInputType
  _min?: ProfileMinAggregateInputType
  _max?: ProfileMaxAggregateInputType
}

export type ProfileGroupByOutputType = {
  id: bigint
  createdAt: Date
  updatedAt: Date
  userName: string
  password: string
  fullName: string
  description: string | null
  socialLinkPrimary: string | null
  socialLinkSecondary: string | null
  avatarId: bigint | null
  _count: ProfileCountAggregateOutputType | null
  _avg: ProfileAvgAggregateOutputType | null
  _sum: ProfileSumAggregateOutputType | null
  _min: ProfileMinAggregateOutputType | null
  _max: ProfileMaxAggregateOutputType | null
}

type GetProfileGroupByPayload<T extends ProfileGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ProfileGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ProfileGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ProfileGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ProfileGroupByOutputType[P]>
      }
    >
  >



export type ProfileWhereInput = {
  AND?: Prisma.ProfileWhereInput | Prisma.ProfileWhereInput[]
  OR?: Prisma.ProfileWhereInput[]
  NOT?: Prisma.ProfileWhereInput | Prisma.ProfileWhereInput[]
  id?: Prisma.BigIntFilter<"Profile"> | bigint | number
  createdAt?: Prisma.DateTimeFilter<"Profile"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Profile"> | Date | string
  userName?: Prisma.StringFilter<"Profile"> | string
  password?: Prisma.StringFilter<"Profile"> | string
  fullName?: Prisma.StringFilter<"Profile"> | string
  description?: Prisma.StringNullableFilter<"Profile"> | string | null
  socialLinkPrimary?: Prisma.StringNullableFilter<"Profile"> | string | null
  socialLinkSecondary?: Prisma.StringNullableFilter<"Profile"> | string | null
  avatarId?: Prisma.BigIntNullableFilter<"Profile"> | bigint | number | null
  avatar?: Prisma.XOR<Prisma.ProfileAvatarNullableScalarRelationFilter, Prisma.ProfileAvatarWhereInput> | null
  works?: Prisma.WorkListRelationFilter
  followers?: Prisma.FollowListRelationFilter
  following?: Prisma.FollowListRelationFilter
  workLikes?: Prisma.WorkLikeListRelationFilter
  workResponses?: Prisma.WorkResponseListRelationFilter
  workResponseLikes?: Prisma.WorkResponseLikeListRelationFilter
}

export type ProfileOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  userName?: Prisma.SortOrder
  password?: Prisma.SortOrder
  fullName?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  socialLinkPrimary?: Prisma.SortOrderInput | Prisma.SortOrder
  socialLinkSecondary?: Prisma.SortOrderInput | Prisma.SortOrder
  avatarId?: Prisma.SortOrderInput | Prisma.SortOrder
  avatar?: Prisma.ProfileAvatarOrderByWithRelationInput
  works?: Prisma.WorkOrderByRelationAggregateInput
  followers?: Prisma.FollowOrderByRelationAggregateInput
  following?: Prisma.FollowOrderByRelationAggregateInput
  workLikes?: Prisma.WorkLikeOrderByRelationAggregateInput
  workResponses?: Prisma.WorkResponseOrderByRelationAggregateInput
  workResponseLikes?: Prisma.WorkResponseLikeOrderByRelationAggregateInput
}

export type ProfileWhereUniqueInput = Prisma.AtLeast<{
  id?: bigint | number
  userName?: string
  avatarId?: bigint | number
  AND?: Prisma.ProfileWhereInput | Prisma.ProfileWhereInput[]
  OR?: Prisma.ProfileWhereInput[]
  NOT?: Prisma.ProfileWhereInput | Prisma.ProfileWhereInput[]
  createdAt?: Prisma.DateTimeFilter<"Profile"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Profile"> | Date | string
  password?: Prisma.StringFilter<"Profile"> | string
  fullName?: Prisma.StringFilter<"Profile"> | string
  description?: Prisma.StringNullableFilter<"Profile"> | string | null
  socialLinkPrimary?: Prisma.StringNullableFilter<"Profile"> | string | null
  socialLinkSecondary?: Prisma.StringNullableFilter<"Profile"> | string | null
  avatar?: Prisma.XOR<Prisma.ProfileAvatarNullableScalarRelationFilter, Prisma.ProfileAvatarWhereInput> | null
  works?: Prisma.WorkListRelationFilter
  followers?: Prisma.FollowListRelationFilter
  following?: Prisma.FollowListRelationFilter
  workLikes?: Prisma.WorkLikeListRelationFilter
  workResponses?: Prisma.WorkResponseListRelationFilter
  workResponseLikes?: Prisma.WorkResponseLikeListRelationFilter
}, "id" | "userName" | "avatarId">

export type ProfileOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  userName?: Prisma.SortOrder
  password?: Prisma.SortOrder
  fullName?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  socialLinkPrimary?: Prisma.SortOrderInput | Prisma.SortOrder
  socialLinkSecondary?: Prisma.SortOrderInput | Prisma.SortOrder
  avatarId?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.ProfileCountOrderByAggregateInput
  _avg?: Prisma.ProfileAvgOrderByAggregateInput
  _max?: Prisma.ProfileMaxOrderByAggregateInput
  _min?: Prisma.ProfileMinOrderByAggregateInput
  _sum?: Prisma.ProfileSumOrderByAggregateInput
}

export type ProfileScalarWhereWithAggregatesInput = {
  AND?: Prisma.ProfileScalarWhereWithAggregatesInput | Prisma.ProfileScalarWhereWithAggregatesInput[]
  OR?: Prisma.ProfileScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ProfileScalarWhereWithAggregatesInput | Prisma.ProfileScalarWhereWithAggregatesInput[]
  id?: Prisma.BigIntWithAggregatesFilter<"Profile"> | bigint | number
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Profile"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Profile"> | Date | string
  userName?: Prisma.StringWithAggregatesFilter<"Profile"> | string
  password?: Prisma.StringWithAggregatesFilter<"Profile"> | string
  fullName?: Prisma.StringWithAggregatesFilter<"Profile"> | string
  description?: Prisma.StringNullableWithAggregatesFilter<"Profile"> | string | null
  socialLinkPrimary?: Prisma.StringNullableWithAggregatesFilter<"Profile"> | string | null
  socialLinkSecondary?: Prisma.StringNullableWithAggregatesFilter<"Profile"> | string | null
  avatarId?: Prisma.BigIntNullableWithAggregatesFilter<"Profile"> | bigint | number | null
}

export type ProfileCreateInput = {
  id?: bigint | number
  createdAt?: Date | string
  updatedAt?: Date | string
  userName: string
  password: string
  fullName: string
  description?: string | null
  socialLinkPrimary?: string | null
  socialLinkSecondary?: string | null
  avatar?: Prisma.ProfileAvatarCreateNestedOneWithoutProfileInput
  works?: Prisma.WorkCreateNestedManyWithoutAuthorInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  following?: Prisma.FollowCreateNestedManyWithoutFollowerInput
  workLikes?: Prisma.WorkLikeCreateNestedManyWithoutLikerInput
  workResponses?: Prisma.WorkResponseCreateNestedManyWithoutResponderInput
  workResponseLikes?: Prisma.WorkResponseLikeCreateNestedManyWithoutLikerInput
}

export type ProfileUncheckedCreateInput = {
  id?: bigint | number
  createdAt?: Date | string
  updatedAt?: Date | string
  userName: string
  password: string
  fullName: string
  description?: string | null
  socialLinkPrimary?: string | null
  socialLinkSecondary?: string | null
  avatarId?: bigint | number | null
  works?: Prisma.WorkUncheckedCreateNestedManyWithoutAuthorInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  following?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowerInput
  workLikes?: Prisma.WorkLikeUncheckedCreateNestedManyWithoutLikerInput
  workResponses?: Prisma.WorkResponseUncheckedCreateNestedManyWithoutResponderInput
  workResponseLikes?: Prisma.WorkResponseLikeUncheckedCreateNestedManyWithoutLikerInput
}

export type ProfileUpdateInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userName?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkPrimary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkSecondary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.ProfileAvatarUpdateOneWithoutProfileNestedInput
  works?: Prisma.WorkUpdateManyWithoutAuthorNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  following?: Prisma.FollowUpdateManyWithoutFollowerNestedInput
  workLikes?: Prisma.WorkLikeUpdateManyWithoutLikerNestedInput
  workResponses?: Prisma.WorkResponseUpdateManyWithoutResponderNestedInput
  workResponseLikes?: Prisma.WorkResponseLikeUpdateManyWithoutLikerNestedInput
}

export type ProfileUncheckedUpdateInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userName?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkPrimary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkSecondary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatarId?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  works?: Prisma.WorkUncheckedUpdateManyWithoutAuthorNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  following?: Prisma.FollowUncheckedUpdateManyWithoutFollowerNestedInput
  workLikes?: Prisma.WorkLikeUncheckedUpdateManyWithoutLikerNestedInput
  workResponses?: Prisma.WorkResponseUncheckedUpdateManyWithoutResponderNestedInput
  workResponseLikes?: Prisma.WorkResponseLikeUncheckedUpdateManyWithoutLikerNestedInput
}

export type ProfileCreateManyInput = {
  id?: bigint | number
  createdAt?: Date | string
  updatedAt?: Date | string
  userName: string
  password: string
  fullName: string
  description?: string | null
  socialLinkPrimary?: string | null
  socialLinkSecondary?: string | null
  avatarId?: bigint | number | null
}

export type ProfileUpdateManyMutationInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userName?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkPrimary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkSecondary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type ProfileUncheckedUpdateManyInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userName?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkPrimary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkSecondary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatarId?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
}

export type ProfileScalarRelationFilter = {
  is?: Prisma.ProfileWhereInput
  isNot?: Prisma.ProfileWhereInput
}

export type ProfileCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  userName?: Prisma.SortOrder
  password?: Prisma.SortOrder
  fullName?: Prisma.SortOrder
  description?: Prisma.SortOrder
  socialLinkPrimary?: Prisma.SortOrder
  socialLinkSecondary?: Prisma.SortOrder
  avatarId?: Prisma.SortOrder
}

export type ProfileAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  avatarId?: Prisma.SortOrder
}

export type ProfileMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  userName?: Prisma.SortOrder
  password?: Prisma.SortOrder
  fullName?: Prisma.SortOrder
  description?: Prisma.SortOrder
  socialLinkPrimary?: Prisma.SortOrder
  socialLinkSecondary?: Prisma.SortOrder
  avatarId?: Prisma.SortOrder
}

export type ProfileMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  userName?: Prisma.SortOrder
  password?: Prisma.SortOrder
  fullName?: Prisma.SortOrder
  description?: Prisma.SortOrder
  socialLinkPrimary?: Prisma.SortOrder
  socialLinkSecondary?: Prisma.SortOrder
  avatarId?: Prisma.SortOrder
}

export type ProfileSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  avatarId?: Prisma.SortOrder
}

export type ProfileNullableScalarRelationFilter = {
  is?: Prisma.ProfileWhereInput | null
  isNot?: Prisma.ProfileWhereInput | null
}

export type ProfileCreateNestedOneWithoutWorksInput = {
  create?: Prisma.XOR<Prisma.ProfileCreateWithoutWorksInput, Prisma.ProfileUncheckedCreateWithoutWorksInput>
  connectOrCreate?: Prisma.ProfileCreateOrConnectWithoutWorksInput
  connect?: Prisma.ProfileWhereUniqueInput
}

export type ProfileUpdateOneRequiredWithoutWorksNestedInput = {
  create?: Prisma.XOR<Prisma.ProfileCreateWithoutWorksInput, Prisma.ProfileUncheckedCreateWithoutWorksInput>
  connectOrCreate?: Prisma.ProfileCreateOrConnectWithoutWorksInput
  upsert?: Prisma.ProfileUpsertWithoutWorksInput
  connect?: Prisma.ProfileWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProfileUpdateToOneWithWhereWithoutWorksInput, Prisma.ProfileUpdateWithoutWorksInput>, Prisma.ProfileUncheckedUpdateWithoutWorksInput>
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null
}

export type NullableBigIntFieldUpdateOperationsInput = {
  set?: bigint | number | null
  increment?: bigint | number
  decrement?: bigint | number
  multiply?: bigint | number
  divide?: bigint | number
}

export type ProfileCreateNestedOneWithoutAvatarInput = {
  create?: Prisma.XOR<Prisma.ProfileCreateWithoutAvatarInput, Prisma.ProfileUncheckedCreateWithoutAvatarInput>
  connectOrCreate?: Prisma.ProfileCreateOrConnectWithoutAvatarInput
  connect?: Prisma.ProfileWhereUniqueInput
}

export type ProfileUncheckedCreateNestedOneWithoutAvatarInput = {
  create?: Prisma.XOR<Prisma.ProfileCreateWithoutAvatarInput, Prisma.ProfileUncheckedCreateWithoutAvatarInput>
  connectOrCreate?: Prisma.ProfileCreateOrConnectWithoutAvatarInput
  connect?: Prisma.ProfileWhereUniqueInput
}

export type ProfileUpdateOneWithoutAvatarNestedInput = {
  create?: Prisma.XOR<Prisma.ProfileCreateWithoutAvatarInput, Prisma.ProfileUncheckedCreateWithoutAvatarInput>
  connectOrCreate?: Prisma.ProfileCreateOrConnectWithoutAvatarInput
  upsert?: Prisma.ProfileUpsertWithoutAvatarInput
  disconnect?: Prisma.ProfileWhereInput | boolean
  delete?: Prisma.ProfileWhereInput | boolean
  connect?: Prisma.ProfileWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProfileUpdateToOneWithWhereWithoutAvatarInput, Prisma.ProfileUpdateWithoutAvatarInput>, Prisma.ProfileUncheckedUpdateWithoutAvatarInput>
}

export type ProfileUncheckedUpdateOneWithoutAvatarNestedInput = {
  create?: Prisma.XOR<Prisma.ProfileCreateWithoutAvatarInput, Prisma.ProfileUncheckedCreateWithoutAvatarInput>
  connectOrCreate?: Prisma.ProfileCreateOrConnectWithoutAvatarInput
  upsert?: Prisma.ProfileUpsertWithoutAvatarInput
  disconnect?: Prisma.ProfileWhereInput | boolean
  delete?: Prisma.ProfileWhereInput | boolean
  connect?: Prisma.ProfileWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProfileUpdateToOneWithWhereWithoutAvatarInput, Prisma.ProfileUpdateWithoutAvatarInput>, Prisma.ProfileUncheckedUpdateWithoutAvatarInput>
}

export type ProfileCreateNestedOneWithoutFollowingInput = {
  create?: Prisma.XOR<Prisma.ProfileCreateWithoutFollowingInput, Prisma.ProfileUncheckedCreateWithoutFollowingInput>
  connectOrCreate?: Prisma.ProfileCreateOrConnectWithoutFollowingInput
  connect?: Prisma.ProfileWhereUniqueInput
}

export type ProfileCreateNestedOneWithoutFollowersInput = {
  create?: Prisma.XOR<Prisma.ProfileCreateWithoutFollowersInput, Prisma.ProfileUncheckedCreateWithoutFollowersInput>
  connectOrCreate?: Prisma.ProfileCreateOrConnectWithoutFollowersInput
  connect?: Prisma.ProfileWhereUniqueInput
}

export type ProfileUpdateOneRequiredWithoutFollowingNestedInput = {
  create?: Prisma.XOR<Prisma.ProfileCreateWithoutFollowingInput, Prisma.ProfileUncheckedCreateWithoutFollowingInput>
  connectOrCreate?: Prisma.ProfileCreateOrConnectWithoutFollowingInput
  upsert?: Prisma.ProfileUpsertWithoutFollowingInput
  connect?: Prisma.ProfileWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProfileUpdateToOneWithWhereWithoutFollowingInput, Prisma.ProfileUpdateWithoutFollowingInput>, Prisma.ProfileUncheckedUpdateWithoutFollowingInput>
}

export type ProfileUpdateOneRequiredWithoutFollowersNestedInput = {
  create?: Prisma.XOR<Prisma.ProfileCreateWithoutFollowersInput, Prisma.ProfileUncheckedCreateWithoutFollowersInput>
  connectOrCreate?: Prisma.ProfileCreateOrConnectWithoutFollowersInput
  upsert?: Prisma.ProfileUpsertWithoutFollowersInput
  connect?: Prisma.ProfileWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProfileUpdateToOneWithWhereWithoutFollowersInput, Prisma.ProfileUpdateWithoutFollowersInput>, Prisma.ProfileUncheckedUpdateWithoutFollowersInput>
}

export type ProfileCreateNestedOneWithoutWorkLikesInput = {
  create?: Prisma.XOR<Prisma.ProfileCreateWithoutWorkLikesInput, Prisma.ProfileUncheckedCreateWithoutWorkLikesInput>
  connectOrCreate?: Prisma.ProfileCreateOrConnectWithoutWorkLikesInput
  connect?: Prisma.ProfileWhereUniqueInput
}

export type ProfileUpdateOneRequiredWithoutWorkLikesNestedInput = {
  create?: Prisma.XOR<Prisma.ProfileCreateWithoutWorkLikesInput, Prisma.ProfileUncheckedCreateWithoutWorkLikesInput>
  connectOrCreate?: Prisma.ProfileCreateOrConnectWithoutWorkLikesInput
  upsert?: Prisma.ProfileUpsertWithoutWorkLikesInput
  connect?: Prisma.ProfileWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProfileUpdateToOneWithWhereWithoutWorkLikesInput, Prisma.ProfileUpdateWithoutWorkLikesInput>, Prisma.ProfileUncheckedUpdateWithoutWorkLikesInput>
}

export type ProfileCreateNestedOneWithoutWorkResponsesInput = {
  create?: Prisma.XOR<Prisma.ProfileCreateWithoutWorkResponsesInput, Prisma.ProfileUncheckedCreateWithoutWorkResponsesInput>
  connectOrCreate?: Prisma.ProfileCreateOrConnectWithoutWorkResponsesInput
  connect?: Prisma.ProfileWhereUniqueInput
}

export type ProfileUpdateOneRequiredWithoutWorkResponsesNestedInput = {
  create?: Prisma.XOR<Prisma.ProfileCreateWithoutWorkResponsesInput, Prisma.ProfileUncheckedCreateWithoutWorkResponsesInput>
  connectOrCreate?: Prisma.ProfileCreateOrConnectWithoutWorkResponsesInput
  upsert?: Prisma.ProfileUpsertWithoutWorkResponsesInput
  connect?: Prisma.ProfileWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProfileUpdateToOneWithWhereWithoutWorkResponsesInput, Prisma.ProfileUpdateWithoutWorkResponsesInput>, Prisma.ProfileUncheckedUpdateWithoutWorkResponsesInput>
}

export type ProfileCreateNestedOneWithoutWorkResponseLikesInput = {
  create?: Prisma.XOR<Prisma.ProfileCreateWithoutWorkResponseLikesInput, Prisma.ProfileUncheckedCreateWithoutWorkResponseLikesInput>
  connectOrCreate?: Prisma.ProfileCreateOrConnectWithoutWorkResponseLikesInput
  connect?: Prisma.ProfileWhereUniqueInput
}

export type ProfileUpdateOneRequiredWithoutWorkResponseLikesNestedInput = {
  create?: Prisma.XOR<Prisma.ProfileCreateWithoutWorkResponseLikesInput, Prisma.ProfileUncheckedCreateWithoutWorkResponseLikesInput>
  connectOrCreate?: Prisma.ProfileCreateOrConnectWithoutWorkResponseLikesInput
  upsert?: Prisma.ProfileUpsertWithoutWorkResponseLikesInput
  connect?: Prisma.ProfileWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProfileUpdateToOneWithWhereWithoutWorkResponseLikesInput, Prisma.ProfileUpdateWithoutWorkResponseLikesInput>, Prisma.ProfileUncheckedUpdateWithoutWorkResponseLikesInput>
}

export type ProfileCreateWithoutWorksInput = {
  id?: bigint | number
  createdAt?: Date | string
  updatedAt?: Date | string
  userName: string
  password: string
  fullName: string
  description?: string | null
  socialLinkPrimary?: string | null
  socialLinkSecondary?: string | null
  avatar?: Prisma.ProfileAvatarCreateNestedOneWithoutProfileInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  following?: Prisma.FollowCreateNestedManyWithoutFollowerInput
  workLikes?: Prisma.WorkLikeCreateNestedManyWithoutLikerInput
  workResponses?: Prisma.WorkResponseCreateNestedManyWithoutResponderInput
  workResponseLikes?: Prisma.WorkResponseLikeCreateNestedManyWithoutLikerInput
}

export type ProfileUncheckedCreateWithoutWorksInput = {
  id?: bigint | number
  createdAt?: Date | string
  updatedAt?: Date | string
  userName: string
  password: string
  fullName: string
  description?: string | null
  socialLinkPrimary?: string | null
  socialLinkSecondary?: string | null
  avatarId?: bigint | number | null
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  following?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowerInput
  workLikes?: Prisma.WorkLikeUncheckedCreateNestedManyWithoutLikerInput
  workResponses?: Prisma.WorkResponseUncheckedCreateNestedManyWithoutResponderInput
  workResponseLikes?: Prisma.WorkResponseLikeUncheckedCreateNestedManyWithoutLikerInput
}

export type ProfileCreateOrConnectWithoutWorksInput = {
  where: Prisma.ProfileWhereUniqueInput
  create: Prisma.XOR<Prisma.ProfileCreateWithoutWorksInput, Prisma.ProfileUncheckedCreateWithoutWorksInput>
}

export type ProfileUpsertWithoutWorksInput = {
  update: Prisma.XOR<Prisma.ProfileUpdateWithoutWorksInput, Prisma.ProfileUncheckedUpdateWithoutWorksInput>
  create: Prisma.XOR<Prisma.ProfileCreateWithoutWorksInput, Prisma.ProfileUncheckedCreateWithoutWorksInput>
  where?: Prisma.ProfileWhereInput
}

export type ProfileUpdateToOneWithWhereWithoutWorksInput = {
  where?: Prisma.ProfileWhereInput
  data: Prisma.XOR<Prisma.ProfileUpdateWithoutWorksInput, Prisma.ProfileUncheckedUpdateWithoutWorksInput>
}

export type ProfileUpdateWithoutWorksInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userName?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkPrimary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkSecondary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.ProfileAvatarUpdateOneWithoutProfileNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  following?: Prisma.FollowUpdateManyWithoutFollowerNestedInput
  workLikes?: Prisma.WorkLikeUpdateManyWithoutLikerNestedInput
  workResponses?: Prisma.WorkResponseUpdateManyWithoutResponderNestedInput
  workResponseLikes?: Prisma.WorkResponseLikeUpdateManyWithoutLikerNestedInput
}

export type ProfileUncheckedUpdateWithoutWorksInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userName?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkPrimary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkSecondary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatarId?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  following?: Prisma.FollowUncheckedUpdateManyWithoutFollowerNestedInput
  workLikes?: Prisma.WorkLikeUncheckedUpdateManyWithoutLikerNestedInput
  workResponses?: Prisma.WorkResponseUncheckedUpdateManyWithoutResponderNestedInput
  workResponseLikes?: Prisma.WorkResponseLikeUncheckedUpdateManyWithoutLikerNestedInput
}

export type ProfileCreateWithoutAvatarInput = {
  id?: bigint | number
  createdAt?: Date | string
  updatedAt?: Date | string
  userName: string
  password: string
  fullName: string
  description?: string | null
  socialLinkPrimary?: string | null
  socialLinkSecondary?: string | null
  works?: Prisma.WorkCreateNestedManyWithoutAuthorInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  following?: Prisma.FollowCreateNestedManyWithoutFollowerInput
  workLikes?: Prisma.WorkLikeCreateNestedManyWithoutLikerInput
  workResponses?: Prisma.WorkResponseCreateNestedManyWithoutResponderInput
  workResponseLikes?: Prisma.WorkResponseLikeCreateNestedManyWithoutLikerInput
}

export type ProfileUncheckedCreateWithoutAvatarInput = {
  id?: bigint | number
  createdAt?: Date | string
  updatedAt?: Date | string
  userName: string
  password: string
  fullName: string
  description?: string | null
  socialLinkPrimary?: string | null
  socialLinkSecondary?: string | null
  works?: Prisma.WorkUncheckedCreateNestedManyWithoutAuthorInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  following?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowerInput
  workLikes?: Prisma.WorkLikeUncheckedCreateNestedManyWithoutLikerInput
  workResponses?: Prisma.WorkResponseUncheckedCreateNestedManyWithoutResponderInput
  workResponseLikes?: Prisma.WorkResponseLikeUncheckedCreateNestedManyWithoutLikerInput
}

export type ProfileCreateOrConnectWithoutAvatarInput = {
  where: Prisma.ProfileWhereUniqueInput
  create: Prisma.XOR<Prisma.ProfileCreateWithoutAvatarInput, Prisma.ProfileUncheckedCreateWithoutAvatarInput>
}

export type ProfileUpsertWithoutAvatarInput = {
  update: Prisma.XOR<Prisma.ProfileUpdateWithoutAvatarInput, Prisma.ProfileUncheckedUpdateWithoutAvatarInput>
  create: Prisma.XOR<Prisma.ProfileCreateWithoutAvatarInput, Prisma.ProfileUncheckedCreateWithoutAvatarInput>
  where?: Prisma.ProfileWhereInput
}

export type ProfileUpdateToOneWithWhereWithoutAvatarInput = {
  where?: Prisma.ProfileWhereInput
  data: Prisma.XOR<Prisma.ProfileUpdateWithoutAvatarInput, Prisma.ProfileUncheckedUpdateWithoutAvatarInput>
}

export type ProfileUpdateWithoutAvatarInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userName?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkPrimary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkSecondary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  works?: Prisma.WorkUpdateManyWithoutAuthorNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  following?: Prisma.FollowUpdateManyWithoutFollowerNestedInput
  workLikes?: Prisma.WorkLikeUpdateManyWithoutLikerNestedInput
  workResponses?: Prisma.WorkResponseUpdateManyWithoutResponderNestedInput
  workResponseLikes?: Prisma.WorkResponseLikeUpdateManyWithoutLikerNestedInput
}

export type ProfileUncheckedUpdateWithoutAvatarInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userName?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkPrimary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkSecondary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  works?: Prisma.WorkUncheckedUpdateManyWithoutAuthorNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  following?: Prisma.FollowUncheckedUpdateManyWithoutFollowerNestedInput
  workLikes?: Prisma.WorkLikeUncheckedUpdateManyWithoutLikerNestedInput
  workResponses?: Prisma.WorkResponseUncheckedUpdateManyWithoutResponderNestedInput
  workResponseLikes?: Prisma.WorkResponseLikeUncheckedUpdateManyWithoutLikerNestedInput
}

export type ProfileCreateWithoutFollowingInput = {
  id?: bigint | number
  createdAt?: Date | string
  updatedAt?: Date | string
  userName: string
  password: string
  fullName: string
  description?: string | null
  socialLinkPrimary?: string | null
  socialLinkSecondary?: string | null
  avatar?: Prisma.ProfileAvatarCreateNestedOneWithoutProfileInput
  works?: Prisma.WorkCreateNestedManyWithoutAuthorInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  workLikes?: Prisma.WorkLikeCreateNestedManyWithoutLikerInput
  workResponses?: Prisma.WorkResponseCreateNestedManyWithoutResponderInput
  workResponseLikes?: Prisma.WorkResponseLikeCreateNestedManyWithoutLikerInput
}

export type ProfileUncheckedCreateWithoutFollowingInput = {
  id?: bigint | number
  createdAt?: Date | string
  updatedAt?: Date | string
  userName: string
  password: string
  fullName: string
  description?: string | null
  socialLinkPrimary?: string | null
  socialLinkSecondary?: string | null
  avatarId?: bigint | number | null
  works?: Prisma.WorkUncheckedCreateNestedManyWithoutAuthorInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  workLikes?: Prisma.WorkLikeUncheckedCreateNestedManyWithoutLikerInput
  workResponses?: Prisma.WorkResponseUncheckedCreateNestedManyWithoutResponderInput
  workResponseLikes?: Prisma.WorkResponseLikeUncheckedCreateNestedManyWithoutLikerInput
}

export type ProfileCreateOrConnectWithoutFollowingInput = {
  where: Prisma.ProfileWhereUniqueInput
  create: Prisma.XOR<Prisma.ProfileCreateWithoutFollowingInput, Prisma.ProfileUncheckedCreateWithoutFollowingInput>
}

export type ProfileCreateWithoutFollowersInput = {
  id?: bigint | number
  createdAt?: Date | string
  updatedAt?: Date | string
  userName: string
  password: string
  fullName: string
  description?: string | null
  socialLinkPrimary?: string | null
  socialLinkSecondary?: string | null
  avatar?: Prisma.ProfileAvatarCreateNestedOneWithoutProfileInput
  works?: Prisma.WorkCreateNestedManyWithoutAuthorInput
  following?: Prisma.FollowCreateNestedManyWithoutFollowerInput
  workLikes?: Prisma.WorkLikeCreateNestedManyWithoutLikerInput
  workResponses?: Prisma.WorkResponseCreateNestedManyWithoutResponderInput
  workResponseLikes?: Prisma.WorkResponseLikeCreateNestedManyWithoutLikerInput
}

export type ProfileUncheckedCreateWithoutFollowersInput = {
  id?: bigint | number
  createdAt?: Date | string
  updatedAt?: Date | string
  userName: string
  password: string
  fullName: string
  description?: string | null
  socialLinkPrimary?: string | null
  socialLinkSecondary?: string | null
  avatarId?: bigint | number | null
  works?: Prisma.WorkUncheckedCreateNestedManyWithoutAuthorInput
  following?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowerInput
  workLikes?: Prisma.WorkLikeUncheckedCreateNestedManyWithoutLikerInput
  workResponses?: Prisma.WorkResponseUncheckedCreateNestedManyWithoutResponderInput
  workResponseLikes?: Prisma.WorkResponseLikeUncheckedCreateNestedManyWithoutLikerInput
}

export type ProfileCreateOrConnectWithoutFollowersInput = {
  where: Prisma.ProfileWhereUniqueInput
  create: Prisma.XOR<Prisma.ProfileCreateWithoutFollowersInput, Prisma.ProfileUncheckedCreateWithoutFollowersInput>
}

export type ProfileUpsertWithoutFollowingInput = {
  update: Prisma.XOR<Prisma.ProfileUpdateWithoutFollowingInput, Prisma.ProfileUncheckedUpdateWithoutFollowingInput>
  create: Prisma.XOR<Prisma.ProfileCreateWithoutFollowingInput, Prisma.ProfileUncheckedCreateWithoutFollowingInput>
  where?: Prisma.ProfileWhereInput
}

export type ProfileUpdateToOneWithWhereWithoutFollowingInput = {
  where?: Prisma.ProfileWhereInput
  data: Prisma.XOR<Prisma.ProfileUpdateWithoutFollowingInput, Prisma.ProfileUncheckedUpdateWithoutFollowingInput>
}

export type ProfileUpdateWithoutFollowingInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userName?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkPrimary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkSecondary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.ProfileAvatarUpdateOneWithoutProfileNestedInput
  works?: Prisma.WorkUpdateManyWithoutAuthorNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  workLikes?: Prisma.WorkLikeUpdateManyWithoutLikerNestedInput
  workResponses?: Prisma.WorkResponseUpdateManyWithoutResponderNestedInput
  workResponseLikes?: Prisma.WorkResponseLikeUpdateManyWithoutLikerNestedInput
}

export type ProfileUncheckedUpdateWithoutFollowingInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userName?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkPrimary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkSecondary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatarId?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  works?: Prisma.WorkUncheckedUpdateManyWithoutAuthorNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  workLikes?: Prisma.WorkLikeUncheckedUpdateManyWithoutLikerNestedInput
  workResponses?: Prisma.WorkResponseUncheckedUpdateManyWithoutResponderNestedInput
  workResponseLikes?: Prisma.WorkResponseLikeUncheckedUpdateManyWithoutLikerNestedInput
}

export type ProfileUpsertWithoutFollowersInput = {
  update: Prisma.XOR<Prisma.ProfileUpdateWithoutFollowersInput, Prisma.ProfileUncheckedUpdateWithoutFollowersInput>
  create: Prisma.XOR<Prisma.ProfileCreateWithoutFollowersInput, Prisma.ProfileUncheckedCreateWithoutFollowersInput>
  where?: Prisma.ProfileWhereInput
}

export type ProfileUpdateToOneWithWhereWithoutFollowersInput = {
  where?: Prisma.ProfileWhereInput
  data: Prisma.XOR<Prisma.ProfileUpdateWithoutFollowersInput, Prisma.ProfileUncheckedUpdateWithoutFollowersInput>
}

export type ProfileUpdateWithoutFollowersInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userName?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkPrimary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkSecondary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.ProfileAvatarUpdateOneWithoutProfileNestedInput
  works?: Prisma.WorkUpdateManyWithoutAuthorNestedInput
  following?: Prisma.FollowUpdateManyWithoutFollowerNestedInput
  workLikes?: Prisma.WorkLikeUpdateManyWithoutLikerNestedInput
  workResponses?: Prisma.WorkResponseUpdateManyWithoutResponderNestedInput
  workResponseLikes?: Prisma.WorkResponseLikeUpdateManyWithoutLikerNestedInput
}

export type ProfileUncheckedUpdateWithoutFollowersInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userName?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkPrimary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkSecondary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatarId?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  works?: Prisma.WorkUncheckedUpdateManyWithoutAuthorNestedInput
  following?: Prisma.FollowUncheckedUpdateManyWithoutFollowerNestedInput
  workLikes?: Prisma.WorkLikeUncheckedUpdateManyWithoutLikerNestedInput
  workResponses?: Prisma.WorkResponseUncheckedUpdateManyWithoutResponderNestedInput
  workResponseLikes?: Prisma.WorkResponseLikeUncheckedUpdateManyWithoutLikerNestedInput
}

export type ProfileCreateWithoutWorkLikesInput = {
  id?: bigint | number
  createdAt?: Date | string
  updatedAt?: Date | string
  userName: string
  password: string
  fullName: string
  description?: string | null
  socialLinkPrimary?: string | null
  socialLinkSecondary?: string | null
  avatar?: Prisma.ProfileAvatarCreateNestedOneWithoutProfileInput
  works?: Prisma.WorkCreateNestedManyWithoutAuthorInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  following?: Prisma.FollowCreateNestedManyWithoutFollowerInput
  workResponses?: Prisma.WorkResponseCreateNestedManyWithoutResponderInput
  workResponseLikes?: Prisma.WorkResponseLikeCreateNestedManyWithoutLikerInput
}

export type ProfileUncheckedCreateWithoutWorkLikesInput = {
  id?: bigint | number
  createdAt?: Date | string
  updatedAt?: Date | string
  userName: string
  password: string
  fullName: string
  description?: string | null
  socialLinkPrimary?: string | null
  socialLinkSecondary?: string | null
  avatarId?: bigint | number | null
  works?: Prisma.WorkUncheckedCreateNestedManyWithoutAuthorInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  following?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowerInput
  workResponses?: Prisma.WorkResponseUncheckedCreateNestedManyWithoutResponderInput
  workResponseLikes?: Prisma.WorkResponseLikeUncheckedCreateNestedManyWithoutLikerInput
}

export type ProfileCreateOrConnectWithoutWorkLikesInput = {
  where: Prisma.ProfileWhereUniqueInput
  create: Prisma.XOR<Prisma.ProfileCreateWithoutWorkLikesInput, Prisma.ProfileUncheckedCreateWithoutWorkLikesInput>
}

export type ProfileUpsertWithoutWorkLikesInput = {
  update: Prisma.XOR<Prisma.ProfileUpdateWithoutWorkLikesInput, Prisma.ProfileUncheckedUpdateWithoutWorkLikesInput>
  create: Prisma.XOR<Prisma.ProfileCreateWithoutWorkLikesInput, Prisma.ProfileUncheckedCreateWithoutWorkLikesInput>
  where?: Prisma.ProfileWhereInput
}

export type ProfileUpdateToOneWithWhereWithoutWorkLikesInput = {
  where?: Prisma.ProfileWhereInput
  data: Prisma.XOR<Prisma.ProfileUpdateWithoutWorkLikesInput, Prisma.ProfileUncheckedUpdateWithoutWorkLikesInput>
}

export type ProfileUpdateWithoutWorkLikesInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userName?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkPrimary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkSecondary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.ProfileAvatarUpdateOneWithoutProfileNestedInput
  works?: Prisma.WorkUpdateManyWithoutAuthorNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  following?: Prisma.FollowUpdateManyWithoutFollowerNestedInput
  workResponses?: Prisma.WorkResponseUpdateManyWithoutResponderNestedInput
  workResponseLikes?: Prisma.WorkResponseLikeUpdateManyWithoutLikerNestedInput
}

export type ProfileUncheckedUpdateWithoutWorkLikesInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userName?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkPrimary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkSecondary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatarId?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  works?: Prisma.WorkUncheckedUpdateManyWithoutAuthorNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  following?: Prisma.FollowUncheckedUpdateManyWithoutFollowerNestedInput
  workResponses?: Prisma.WorkResponseUncheckedUpdateManyWithoutResponderNestedInput
  workResponseLikes?: Prisma.WorkResponseLikeUncheckedUpdateManyWithoutLikerNestedInput
}

export type ProfileCreateWithoutWorkResponsesInput = {
  id?: bigint | number
  createdAt?: Date | string
  updatedAt?: Date | string
  userName: string
  password: string
  fullName: string
  description?: string | null
  socialLinkPrimary?: string | null
  socialLinkSecondary?: string | null
  avatar?: Prisma.ProfileAvatarCreateNestedOneWithoutProfileInput
  works?: Prisma.WorkCreateNestedManyWithoutAuthorInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  following?: Prisma.FollowCreateNestedManyWithoutFollowerInput
  workLikes?: Prisma.WorkLikeCreateNestedManyWithoutLikerInput
  workResponseLikes?: Prisma.WorkResponseLikeCreateNestedManyWithoutLikerInput
}

export type ProfileUncheckedCreateWithoutWorkResponsesInput = {
  id?: bigint | number
  createdAt?: Date | string
  updatedAt?: Date | string
  userName: string
  password: string
  fullName: string
  description?: string | null
  socialLinkPrimary?: string | null
  socialLinkSecondary?: string | null
  avatarId?: bigint | number | null
  works?: Prisma.WorkUncheckedCreateNestedManyWithoutAuthorInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  following?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowerInput
  workLikes?: Prisma.WorkLikeUncheckedCreateNestedManyWithoutLikerInput
  workResponseLikes?: Prisma.WorkResponseLikeUncheckedCreateNestedManyWithoutLikerInput
}

export type ProfileCreateOrConnectWithoutWorkResponsesInput = {
  where: Prisma.ProfileWhereUniqueInput
  create: Prisma.XOR<Prisma.ProfileCreateWithoutWorkResponsesInput, Prisma.ProfileUncheckedCreateWithoutWorkResponsesInput>
}

export type ProfileUpsertWithoutWorkResponsesInput = {
  update: Prisma.XOR<Prisma.ProfileUpdateWithoutWorkResponsesInput, Prisma.ProfileUncheckedUpdateWithoutWorkResponsesInput>
  create: Prisma.XOR<Prisma.ProfileCreateWithoutWorkResponsesInput, Prisma.ProfileUncheckedCreateWithoutWorkResponsesInput>
  where?: Prisma.ProfileWhereInput
}

export type ProfileUpdateToOneWithWhereWithoutWorkResponsesInput = {
  where?: Prisma.ProfileWhereInput
  data: Prisma.XOR<Prisma.ProfileUpdateWithoutWorkResponsesInput, Prisma.ProfileUncheckedUpdateWithoutWorkResponsesInput>
}

export type ProfileUpdateWithoutWorkResponsesInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userName?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkPrimary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkSecondary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.ProfileAvatarUpdateOneWithoutProfileNestedInput
  works?: Prisma.WorkUpdateManyWithoutAuthorNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  following?: Prisma.FollowUpdateManyWithoutFollowerNestedInput
  workLikes?: Prisma.WorkLikeUpdateManyWithoutLikerNestedInput
  workResponseLikes?: Prisma.WorkResponseLikeUpdateManyWithoutLikerNestedInput
}

export type ProfileUncheckedUpdateWithoutWorkResponsesInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userName?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkPrimary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkSecondary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatarId?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  works?: Prisma.WorkUncheckedUpdateManyWithoutAuthorNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  following?: Prisma.FollowUncheckedUpdateManyWithoutFollowerNestedInput
  workLikes?: Prisma.WorkLikeUncheckedUpdateManyWithoutLikerNestedInput
  workResponseLikes?: Prisma.WorkResponseLikeUncheckedUpdateManyWithoutLikerNestedInput
}

export type ProfileCreateWithoutWorkResponseLikesInput = {
  id?: bigint | number
  createdAt?: Date | string
  updatedAt?: Date | string
  userName: string
  password: string
  fullName: string
  description?: string | null
  socialLinkPrimary?: string | null
  socialLinkSecondary?: string | null
  avatar?: Prisma.ProfileAvatarCreateNestedOneWithoutProfileInput
  works?: Prisma.WorkCreateNestedManyWithoutAuthorInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  following?: Prisma.FollowCreateNestedManyWithoutFollowerInput
  workLikes?: Prisma.WorkLikeCreateNestedManyWithoutLikerInput
  workResponses?: Prisma.WorkResponseCreateNestedManyWithoutResponderInput
}

export type ProfileUncheckedCreateWithoutWorkResponseLikesInput = {
  id?: bigint | number
  createdAt?: Date | string
  updatedAt?: Date | string
  userName: string
  password: string
  fullName: string
  description?: string | null
  socialLinkPrimary?: string | null
  socialLinkSecondary?: string | null
  avatarId?: bigint | number | null
  works?: Prisma.WorkUncheckedCreateNestedManyWithoutAuthorInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  following?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowerInput
  workLikes?: Prisma.WorkLikeUncheckedCreateNestedManyWithoutLikerInput
  workResponses?: Prisma.WorkResponseUncheckedCreateNestedManyWithoutResponderInput
}

export type ProfileCreateOrConnectWithoutWorkResponseLikesInput = {
  where: Prisma.ProfileWhereUniqueInput
  create: Prisma.XOR<Prisma.ProfileCreateWithoutWorkResponseLikesInput, Prisma.ProfileUncheckedCreateWithoutWorkResponseLikesInput>
}

export type ProfileUpsertWithoutWorkResponseLikesInput = {
  update: Prisma.XOR<Prisma.ProfileUpdateWithoutWorkResponseLikesInput, Prisma.ProfileUncheckedUpdateWithoutWorkResponseLikesInput>
  create: Prisma.XOR<Prisma.ProfileCreateWithoutWorkResponseLikesInput, Prisma.ProfileUncheckedCreateWithoutWorkResponseLikesInput>
  where?: Prisma.ProfileWhereInput
}

export type ProfileUpdateToOneWithWhereWithoutWorkResponseLikesInput = {
  where?: Prisma.ProfileWhereInput
  data: Prisma.XOR<Prisma.ProfileUpdateWithoutWorkResponseLikesInput, Prisma.ProfileUncheckedUpdateWithoutWorkResponseLikesInput>
}

export type ProfileUpdateWithoutWorkResponseLikesInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userName?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkPrimary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkSecondary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.ProfileAvatarUpdateOneWithoutProfileNestedInput
  works?: Prisma.WorkUpdateManyWithoutAuthorNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  following?: Prisma.FollowUpdateManyWithoutFollowerNestedInput
  workLikes?: Prisma.WorkLikeUpdateManyWithoutLikerNestedInput
  workResponses?: Prisma.WorkResponseUpdateManyWithoutResponderNestedInput
}

export type ProfileUncheckedUpdateWithoutWorkResponseLikesInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userName?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkPrimary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  socialLinkSecondary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatarId?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  works?: Prisma.WorkUncheckedUpdateManyWithoutAuthorNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  following?: Prisma.FollowUncheckedUpdateManyWithoutFollowerNestedInput
  workLikes?: Prisma.WorkLikeUncheckedUpdateManyWithoutLikerNestedInput
  workResponses?: Prisma.WorkResponseUncheckedUpdateManyWithoutResponderNestedInput
}


/**
 * Count Type ProfileCountOutputType
 */

export type ProfileCountOutputType = {
  works: number
  followers: number
  following: number
  workLikes: number
  workResponses: number
  workResponseLikes: number
}

export type ProfileCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  works?: boolean | ProfileCountOutputTypeCountWorksArgs
  followers?: boolean | ProfileCountOutputTypeCountFollowersArgs
  following?: boolean | ProfileCountOutputTypeCountFollowingArgs
  workLikes?: boolean | ProfileCountOutputTypeCountWorkLikesArgs
  workResponses?: boolean | ProfileCountOutputTypeCountWorkResponsesArgs
  workResponseLikes?: boolean | ProfileCountOutputTypeCountWorkResponseLikesArgs
}

/**
 * ProfileCountOutputType without action
 */
export type ProfileCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProfileCountOutputType
   */
  select?: Prisma.ProfileCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ProfileCountOutputType without action
 */
export type ProfileCountOutputTypeCountWorksArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.WorkWhereInput
}

/**
 * ProfileCountOutputType without action
 */
export type ProfileCountOutputTypeCountFollowersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.FollowWhereInput
}

/**
 * ProfileCountOutputType without action
 */
export type ProfileCountOutputTypeCountFollowingArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.FollowWhereInput
}

/**
 * ProfileCountOutputType without action
 */
export type ProfileCountOutputTypeCountWorkLikesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.WorkLikeWhereInput
}

/**
 * ProfileCountOutputType without action
 */
export type ProfileCountOutputTypeCountWorkResponsesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.WorkResponseWhereInput
}

/**
 * ProfileCountOutputType without action
 */
export type ProfileCountOutputTypeCountWorkResponseLikesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.WorkResponseLikeWhereInput
}


export type ProfileSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  userName?: boolean
  password?: boolean
  fullName?: boolean
  description?: boolean
  socialLinkPrimary?: boolean
  socialLinkSecondary?: boolean
  avatarId?: boolean
  avatar?: boolean | Prisma.Profile$avatarArgs<ExtArgs>
  works?: boolean | Prisma.Profile$worksArgs<ExtArgs>
  followers?: boolean | Prisma.Profile$followersArgs<ExtArgs>
  following?: boolean | Prisma.Profile$followingArgs<ExtArgs>
  workLikes?: boolean | Prisma.Profile$workLikesArgs<ExtArgs>
  workResponses?: boolean | Prisma.Profile$workResponsesArgs<ExtArgs>
  workResponseLikes?: boolean | Prisma.Profile$workResponseLikesArgs<ExtArgs>
  _count?: boolean | Prisma.ProfileCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["profile"]>

export type ProfileSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  userName?: boolean
  password?: boolean
  fullName?: boolean
  description?: boolean
  socialLinkPrimary?: boolean
  socialLinkSecondary?: boolean
  avatarId?: boolean
  avatar?: boolean | Prisma.Profile$avatarArgs<ExtArgs>
}, ExtArgs["result"]["profile"]>

export type ProfileSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  userName?: boolean
  password?: boolean
  fullName?: boolean
  description?: boolean
  socialLinkPrimary?: boolean
  socialLinkSecondary?: boolean
  avatarId?: boolean
  avatar?: boolean | Prisma.Profile$avatarArgs<ExtArgs>
}, ExtArgs["result"]["profile"]>

export type ProfileSelectScalar = {
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  userName?: boolean
  password?: boolean
  fullName?: boolean
  description?: boolean
  socialLinkPrimary?: boolean
  socialLinkSecondary?: boolean
  avatarId?: boolean
}

export type ProfileOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "createdAt" | "updatedAt" | "userName" | "password" | "fullName" | "description" | "socialLinkPrimary" | "socialLinkSecondary" | "avatarId", ExtArgs["result"]["profile"]>
export type ProfileInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  avatar?: boolean | Prisma.Profile$avatarArgs<ExtArgs>
  works?: boolean | Prisma.Profile$worksArgs<ExtArgs>
  followers?: boolean | Prisma.Profile$followersArgs<ExtArgs>
  following?: boolean | Prisma.Profile$followingArgs<ExtArgs>
  workLikes?: boolean | Prisma.Profile$workLikesArgs<ExtArgs>
  workResponses?: boolean | Prisma.Profile$workResponsesArgs<ExtArgs>
  workResponseLikes?: boolean | Prisma.Profile$workResponseLikesArgs<ExtArgs>
  _count?: boolean | Prisma.ProfileCountOutputTypeDefaultArgs<ExtArgs>
}
export type ProfileIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  avatar?: boolean | Prisma.Profile$avatarArgs<ExtArgs>
}
export type ProfileIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  avatar?: boolean | Prisma.Profile$avatarArgs<ExtArgs>
}

export type $ProfilePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Profile"
  objects: {
    avatar: Prisma.$ProfileAvatarPayload<ExtArgs> | null
    works: Prisma.$WorkPayload<ExtArgs>[]
    followers: Prisma.$FollowPayload<ExtArgs>[]
    following: Prisma.$FollowPayload<ExtArgs>[]
    workLikes: Prisma.$WorkLikePayload<ExtArgs>[]
    workResponses: Prisma.$WorkResponsePayload<ExtArgs>[]
    workResponseLikes: Prisma.$WorkResponseLikePayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: bigint
    createdAt: Date
    updatedAt: Date
    userName: string
    password: string
    fullName: string
    description: string | null
    socialLinkPrimary: string | null
    socialLinkSecondary: string | null
    avatarId: bigint | null
  }, ExtArgs["result"]["profile"]>
  composites: {}
}

export type ProfileGetPayload<S extends boolean | null | undefined | ProfileDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ProfilePayload, S>

export type ProfileCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ProfileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ProfileCountAggregateInputType | true
  }

export interface ProfileDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Profile'], meta: { name: 'Profile' } }
  /**
   * Find zero or one Profile that matches the filter.
   * @param {ProfileFindUniqueArgs} args - Arguments to find a Profile
   * @example
   * // Get one Profile
   * const profile = await prisma.profile.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ProfileFindUniqueArgs>(args: Prisma.SelectSubset<T, ProfileFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ProfileClient<runtime.Types.Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Profile that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ProfileFindUniqueOrThrowArgs} args - Arguments to find a Profile
   * @example
   * // Get one Profile
   * const profile = await prisma.profile.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ProfileFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ProfileFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ProfileClient<runtime.Types.Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Profile that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProfileFindFirstArgs} args - Arguments to find a Profile
   * @example
   * // Get one Profile
   * const profile = await prisma.profile.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ProfileFindFirstArgs>(args?: Prisma.SelectSubset<T, ProfileFindFirstArgs<ExtArgs>>): Prisma.Prisma__ProfileClient<runtime.Types.Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Profile that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProfileFindFirstOrThrowArgs} args - Arguments to find a Profile
   * @example
   * // Get one Profile
   * const profile = await prisma.profile.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ProfileFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ProfileFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ProfileClient<runtime.Types.Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Profiles that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProfileFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Profiles
   * const profiles = await prisma.profile.findMany()
   * 
   * // Get first 10 Profiles
   * const profiles = await prisma.profile.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const profileWithIdOnly = await prisma.profile.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ProfileFindManyArgs>(args?: Prisma.SelectSubset<T, ProfileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Profile.
   * @param {ProfileCreateArgs} args - Arguments to create a Profile.
   * @example
   * // Create one Profile
   * const Profile = await prisma.profile.create({
   *   data: {
   *     // ... data to create a Profile
   *   }
   * })
   * 
   */
  create<T extends ProfileCreateArgs>(args: Prisma.SelectSubset<T, ProfileCreateArgs<ExtArgs>>): Prisma.Prisma__ProfileClient<runtime.Types.Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Profiles.
   * @param {ProfileCreateManyArgs} args - Arguments to create many Profiles.
   * @example
   * // Create many Profiles
   * const profile = await prisma.profile.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ProfileCreateManyArgs>(args?: Prisma.SelectSubset<T, ProfileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Profiles and returns the data saved in the database.
   * @param {ProfileCreateManyAndReturnArgs} args - Arguments to create many Profiles.
   * @example
   * // Create many Profiles
   * const profile = await prisma.profile.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Profiles and only return the `id`
   * const profileWithIdOnly = await prisma.profile.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ProfileCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ProfileCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Profile.
   * @param {ProfileDeleteArgs} args - Arguments to delete one Profile.
   * @example
   * // Delete one Profile
   * const Profile = await prisma.profile.delete({
   *   where: {
   *     // ... filter to delete one Profile
   *   }
   * })
   * 
   */
  delete<T extends ProfileDeleteArgs>(args: Prisma.SelectSubset<T, ProfileDeleteArgs<ExtArgs>>): Prisma.Prisma__ProfileClient<runtime.Types.Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Profile.
   * @param {ProfileUpdateArgs} args - Arguments to update one Profile.
   * @example
   * // Update one Profile
   * const profile = await prisma.profile.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ProfileUpdateArgs>(args: Prisma.SelectSubset<T, ProfileUpdateArgs<ExtArgs>>): Prisma.Prisma__ProfileClient<runtime.Types.Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Profiles.
   * @param {ProfileDeleteManyArgs} args - Arguments to filter Profiles to delete.
   * @example
   * // Delete a few Profiles
   * const { count } = await prisma.profile.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ProfileDeleteManyArgs>(args?: Prisma.SelectSubset<T, ProfileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Profiles.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProfileUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Profiles
   * const profile = await prisma.profile.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ProfileUpdateManyArgs>(args: Prisma.SelectSubset<T, ProfileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Profiles and returns the data updated in the database.
   * @param {ProfileUpdateManyAndReturnArgs} args - Arguments to update many Profiles.
   * @example
   * // Update many Profiles
   * const profile = await prisma.profile.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Profiles and only return the `id`
   * const profileWithIdOnly = await prisma.profile.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ProfileUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ProfileUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Profile.
   * @param {ProfileUpsertArgs} args - Arguments to update or create a Profile.
   * @example
   * // Update or create a Profile
   * const profile = await prisma.profile.upsert({
   *   create: {
   *     // ... data to create a Profile
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Profile we want to update
   *   }
   * })
   */
  upsert<T extends ProfileUpsertArgs>(args: Prisma.SelectSubset<T, ProfileUpsertArgs<ExtArgs>>): Prisma.Prisma__ProfileClient<runtime.Types.Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Profiles.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProfileCountArgs} args - Arguments to filter Profiles to count.
   * @example
   * // Count the number of Profiles
   * const count = await prisma.profile.count({
   *   where: {
   *     // ... the filter for the Profiles we want to count
   *   }
   * })
  **/
  count<T extends ProfileCountArgs>(
    args?: Prisma.Subset<T, ProfileCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ProfileCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Profile.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProfileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ProfileAggregateArgs>(args: Prisma.Subset<T, ProfileAggregateArgs>): Prisma.PrismaPromise<GetProfileAggregateType<T>>

  /**
   * Group by Profile.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProfileGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ProfileGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ProfileGroupByArgs['orderBy'] }
      : { orderBy?: ProfileGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ProfileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProfileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Profile model
 */
readonly fields: ProfileFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Profile.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ProfileClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  avatar<T extends Prisma.Profile$avatarArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Profile$avatarArgs<ExtArgs>>): Prisma.Prisma__ProfileAvatarClient<runtime.Types.Result.GetResult<Prisma.$ProfileAvatarPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  works<T extends Prisma.Profile$worksArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Profile$worksArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WorkPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  followers<T extends Prisma.Profile$followersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Profile$followersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$FollowPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  following<T extends Prisma.Profile$followingArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Profile$followingArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$FollowPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  workLikes<T extends Prisma.Profile$workLikesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Profile$workLikesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WorkLikePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  workResponses<T extends Prisma.Profile$workResponsesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Profile$workResponsesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WorkResponsePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  workResponseLikes<T extends Prisma.Profile$workResponseLikesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Profile$workResponseLikesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WorkResponseLikePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Profile model
 */
export interface ProfileFieldRefs {
  readonly id: Prisma.FieldRef<"Profile", 'BigInt'>
  readonly createdAt: Prisma.FieldRef<"Profile", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Profile", 'DateTime'>
  readonly userName: Prisma.FieldRef<"Profile", 'String'>
  readonly password: Prisma.FieldRef<"Profile", 'String'>
  readonly fullName: Prisma.FieldRef<"Profile", 'String'>
  readonly description: Prisma.FieldRef<"Profile", 'String'>
  readonly socialLinkPrimary: Prisma.FieldRef<"Profile", 'String'>
  readonly socialLinkSecondary: Prisma.FieldRef<"Profile", 'String'>
  readonly avatarId: Prisma.FieldRef<"Profile", 'BigInt'>
}
    

// Custom InputTypes
/**
 * Profile findUnique
 */
export type ProfileFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Profile
   */
  select?: Prisma.ProfileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Profile
   */
  omit?: Prisma.ProfileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileInclude<ExtArgs> | null
  /**
   * Filter, which Profile to fetch.
   */
  where: Prisma.ProfileWhereUniqueInput
}

/**
 * Profile findUniqueOrThrow
 */
export type ProfileFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Profile
   */
  select?: Prisma.ProfileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Profile
   */
  omit?: Prisma.ProfileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileInclude<ExtArgs> | null
  /**
   * Filter, which Profile to fetch.
   */
  where: Prisma.ProfileWhereUniqueInput
}

/**
 * Profile findFirst
 */
export type ProfileFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Profile
   */
  select?: Prisma.ProfileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Profile
   */
  omit?: Prisma.ProfileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileInclude<ExtArgs> | null
  /**
   * Filter, which Profile to fetch.
   */
  where?: Prisma.ProfileWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Profiles to fetch.
   */
  orderBy?: Prisma.ProfileOrderByWithRelationInput | Prisma.ProfileOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Profiles.
   */
  cursor?: Prisma.ProfileWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Profiles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Profiles.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Profiles.
   */
  distinct?: Prisma.ProfileScalarFieldEnum | Prisma.ProfileScalarFieldEnum[]
}

/**
 * Profile findFirstOrThrow
 */
export type ProfileFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Profile
   */
  select?: Prisma.ProfileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Profile
   */
  omit?: Prisma.ProfileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileInclude<ExtArgs> | null
  /**
   * Filter, which Profile to fetch.
   */
  where?: Prisma.ProfileWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Profiles to fetch.
   */
  orderBy?: Prisma.ProfileOrderByWithRelationInput | Prisma.ProfileOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Profiles.
   */
  cursor?: Prisma.ProfileWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Profiles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Profiles.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Profiles.
   */
  distinct?: Prisma.ProfileScalarFieldEnum | Prisma.ProfileScalarFieldEnum[]
}

/**
 * Profile findMany
 */
export type ProfileFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Profile
   */
  select?: Prisma.ProfileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Profile
   */
  omit?: Prisma.ProfileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileInclude<ExtArgs> | null
  /**
   * Filter, which Profiles to fetch.
   */
  where?: Prisma.ProfileWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Profiles to fetch.
   */
  orderBy?: Prisma.ProfileOrderByWithRelationInput | Prisma.ProfileOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Profiles.
   */
  cursor?: Prisma.ProfileWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Profiles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Profiles.
   */
  skip?: number
  distinct?: Prisma.ProfileScalarFieldEnum | Prisma.ProfileScalarFieldEnum[]
}

/**
 * Profile create
 */
export type ProfileCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Profile
   */
  select?: Prisma.ProfileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Profile
   */
  omit?: Prisma.ProfileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileInclude<ExtArgs> | null
  /**
   * The data needed to create a Profile.
   */
  data: Prisma.XOR<Prisma.ProfileCreateInput, Prisma.ProfileUncheckedCreateInput>
}

/**
 * Profile createMany
 */
export type ProfileCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Profiles.
   */
  data: Prisma.ProfileCreateManyInput | Prisma.ProfileCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Profile createManyAndReturn
 */
export type ProfileCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Profile
   */
  select?: Prisma.ProfileSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Profile
   */
  omit?: Prisma.ProfileOmit<ExtArgs> | null
  /**
   * The data used to create many Profiles.
   */
  data: Prisma.ProfileCreateManyInput | Prisma.ProfileCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Profile update
 */
export type ProfileUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Profile
   */
  select?: Prisma.ProfileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Profile
   */
  omit?: Prisma.ProfileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileInclude<ExtArgs> | null
  /**
   * The data needed to update a Profile.
   */
  data: Prisma.XOR<Prisma.ProfileUpdateInput, Prisma.ProfileUncheckedUpdateInput>
  /**
   * Choose, which Profile to update.
   */
  where: Prisma.ProfileWhereUniqueInput
}

/**
 * Profile updateMany
 */
export type ProfileUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Profiles.
   */
  data: Prisma.XOR<Prisma.ProfileUpdateManyMutationInput, Prisma.ProfileUncheckedUpdateManyInput>
  /**
   * Filter which Profiles to update
   */
  where?: Prisma.ProfileWhereInput
  /**
   * Limit how many Profiles to update.
   */
  limit?: number
}

/**
 * Profile updateManyAndReturn
 */
export type ProfileUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Profile
   */
  select?: Prisma.ProfileSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Profile
   */
  omit?: Prisma.ProfileOmit<ExtArgs> | null
  /**
   * The data used to update Profiles.
   */
  data: Prisma.XOR<Prisma.ProfileUpdateManyMutationInput, Prisma.ProfileUncheckedUpdateManyInput>
  /**
   * Filter which Profiles to update
   */
  where?: Prisma.ProfileWhereInput
  /**
   * Limit how many Profiles to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Profile upsert
 */
export type ProfileUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Profile
   */
  select?: Prisma.ProfileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Profile
   */
  omit?: Prisma.ProfileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileInclude<ExtArgs> | null
  /**
   * The filter to search for the Profile to update in case it exists.
   */
  where: Prisma.ProfileWhereUniqueInput
  /**
   * In case the Profile found by the `where` argument doesn't exist, create a new Profile with this data.
   */
  create: Prisma.XOR<Prisma.ProfileCreateInput, Prisma.ProfileUncheckedCreateInput>
  /**
   * In case the Profile was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ProfileUpdateInput, Prisma.ProfileUncheckedUpdateInput>
}

/**
 * Profile delete
 */
export type ProfileDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Profile
   */
  select?: Prisma.ProfileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Profile
   */
  omit?: Prisma.ProfileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileInclude<ExtArgs> | null
  /**
   * Filter which Profile to delete.
   */
  where: Prisma.ProfileWhereUniqueInput
}

/**
 * Profile deleteMany
 */
export type ProfileDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Profiles to delete
   */
  where?: Prisma.ProfileWhereInput
  /**
   * Limit how many Profiles to delete.
   */
  limit?: number
}

/**
 * Profile.avatar
 */
export type Profile$avatarArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProfileAvatar
   */
  select?: Prisma.ProfileAvatarSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProfileAvatar
   */
  omit?: Prisma.ProfileAvatarOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileAvatarInclude<ExtArgs> | null
  where?: Prisma.ProfileAvatarWhereInput
}

/**
 * Profile.works
 */
export type Profile$worksArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Work
   */
  select?: Prisma.WorkSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Work
   */
  omit?: Prisma.WorkOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkInclude<ExtArgs> | null
  where?: Prisma.WorkWhereInput
  orderBy?: Prisma.WorkOrderByWithRelationInput | Prisma.WorkOrderByWithRelationInput[]
  cursor?: Prisma.WorkWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.WorkScalarFieldEnum | Prisma.WorkScalarFieldEnum[]
}

/**
 * Profile.followers
 */
export type Profile$followersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Follow
   */
  select?: Prisma.FollowSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Follow
   */
  omit?: Prisma.FollowOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FollowInclude<ExtArgs> | null
  where?: Prisma.FollowWhereInput
  orderBy?: Prisma.FollowOrderByWithRelationInput | Prisma.FollowOrderByWithRelationInput[]
  cursor?: Prisma.FollowWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.FollowScalarFieldEnum | Prisma.FollowScalarFieldEnum[]
}

/**
 * Profile.following
 */
export type Profile$followingArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Follow
   */
  select?: Prisma.FollowSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Follow
   */
  omit?: Prisma.FollowOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FollowInclude<ExtArgs> | null
  where?: Prisma.FollowWhereInput
  orderBy?: Prisma.FollowOrderByWithRelationInput | Prisma.FollowOrderByWithRelationInput[]
  cursor?: Prisma.FollowWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.FollowScalarFieldEnum | Prisma.FollowScalarFieldEnum[]
}

/**
 * Profile.workLikes
 */
export type Profile$workLikesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkLike
   */
  select?: Prisma.WorkLikeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkLike
   */
  omit?: Prisma.WorkLikeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkLikeInclude<ExtArgs> | null
  where?: Prisma.WorkLikeWhereInput
  orderBy?: Prisma.WorkLikeOrderByWithRelationInput | Prisma.WorkLikeOrderByWithRelationInput[]
  cursor?: Prisma.WorkLikeWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.WorkLikeScalarFieldEnum | Prisma.WorkLikeScalarFieldEnum[]
}

/**
 * Profile.workResponses
 */
export type Profile$workResponsesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkResponse
   */
  select?: Prisma.WorkResponseSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkResponse
   */
  omit?: Prisma.WorkResponseOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkResponseInclude<ExtArgs> | null
  where?: Prisma.WorkResponseWhereInput
  orderBy?: Prisma.WorkResponseOrderByWithRelationInput | Prisma.WorkResponseOrderByWithRelationInput[]
  cursor?: Prisma.WorkResponseWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.WorkResponseScalarFieldEnum | Prisma.WorkResponseScalarFieldEnum[]
}

/**
 * Profile.workResponseLikes
 */
export type Profile$workResponseLikesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkResponseLike
   */
  select?: Prisma.WorkResponseLikeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkResponseLike
   */
  omit?: Prisma.WorkResponseLikeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkResponseLikeInclude<ExtArgs> | null
  where?: Prisma.WorkResponseLikeWhereInput
  orderBy?: Prisma.WorkResponseLikeOrderByWithRelationInput | Prisma.WorkResponseLikeOrderByWithRelationInput[]
  cursor?: Prisma.WorkResponseLikeWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.WorkResponseLikeScalarFieldEnum | Prisma.WorkResponseLikeScalarFieldEnum[]
}

/**
 * Profile without action
 */
export type ProfileDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Profile
   */
  select?: Prisma.ProfileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Profile
   */
  omit?: Prisma.ProfileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileInclude<ExtArgs> | null
}
