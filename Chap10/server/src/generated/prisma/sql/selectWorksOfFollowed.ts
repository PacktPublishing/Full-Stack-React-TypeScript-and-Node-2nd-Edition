
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
import * as $runtime from "@prisma/client/runtime/client"

/**
 * @param followerId
 * @param pageSize
 * @param lastCursor
 */
export const selectWorksOfFollowed = $runtime.makeTypedQueryFactory("\nSELECT\nw.id,\nw.\"updatedAt\",\nw.title,\nw.description,\nw.content,\nw.\"authorId\",\np.\"userName\",\np.\"fullName\",\np.description AS \"authorDesc\",\nCOALESCE(\njson_agg(\nDISTINCT jsonb_build_object(\n'topic', jsonb_build_object(\n'id', t.id,\n'name', t.name\n)\n)\n) FILTER (WHERE t.id IS NOT NULL),\n'[]'::json\n) AS \"workTopics\",\nCOALESCE(\njson_agg(\nDISTINCT jsonb_build_object(\n'id', wl.id\n)\n) FILTER (WHERE wl.id IS NOT NULL),\n'[]'::json\n) AS \"workLikes\"\nFROM \"Work\" w\nINNER JOIN \"Profile\" p ON w.\"authorId\" = p.id\nLEFT JOIN \"WorkTopic\" wt ON w.id = wt.\"workId\"\nLEFT JOIN \"Topic\" t ON wt.\"topicId\" = t.id\nLEFT JOIN \"WorkLike\" wl ON w.id = wl.\"workId\"\nINNER JOIN \"Follow\" f ON f.\"followedId\" = w.\"authorId\"\nWHERE f.\"followerId\" = $1\nAND ($3 = -1 OR w.id < $3)\nGROUP BY w.id, w.\"updatedAt\", w.title, w.description, w.content, w.\"authorId\", p.\"userName\", p.\"fullName\", p.description\nORDER BY w.id DESC\nLIMIT $2;") as (followerId: number | bigint, pageSize: number, lastCursor: number | bigint) => $runtime.TypedSql<selectWorksOfFollowed.Parameters, selectWorksOfFollowed.Result>

export namespace selectWorksOfFollowed {
  export type Parameters = [followerId: number | bigint, pageSize: number, lastCursor: number | bigint]
  export type Result = {
    id: bigint
    updatedAt: Date
    title: string
    description: string
    content: string
    authorId: bigint
    userName: string
    fullName: string
    authorDesc: string | null
    workTopics: $runtime.JsonValue | null
    workLikes: $runtime.JsonValue | null
  }
}
